/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/testEntry.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/testEntry.js":
/*!**************************!*\
  !*** ./src/testEntry.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _tokenizr = __webpack_require__(/*! ./tokenizr */ \"./src/tokenizr.js\");\n\nexports.default = _tokenizr.BasicTokenizr;\n\n//# sourceURL=webpack:///./src/testEntry.js?");

/***/ }),

/***/ "./src/tokenizr-1-excerpt.js":
/*!***********************************!*\
  !*** ./src/tokenizr-1-excerpt.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/*\r\n**  Tokenizr -- String Tokenization Library\r\n**  Copyright (c) 2015-2018 Ralf S. Engelschall <rse@engelschall.com>\r\n**\r\n**  Permission is hereby granted, free of charge, to any person obtaining\r\n**  a copy of this software and associated documentation files (the\r\n**  \"Software\"), to deal in the Software without restriction, including\r\n**  without limitation the rights to use, copy, modify, merge, publish,\r\n**  distribute, sublicense, and/or sell copies of the Software, and to\r\n**  permit persons to whom the Software is furnished to do so, subject to\r\n**  the following conditions:\r\n**\r\n**  The above copyright notice and this permission notice shall be included\r\n**  in all copies or substantial portions of the Software.\r\n**\r\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\n\n/*  utility function: create a source excerpt  */\nvar excerpt = function excerpt(txt, o) {\n    var l = txt.length;\n    var b = o - 20;if (b < 0) b = 0;\n    var e = o + 20;if (e > l) e = l;\n    var hex = function hex(ch) {\n        return ch.charCodeAt(0).toString(16).toUpperCase();\n    };\n    var extract = function extract(txt, pos, len) {\n        return txt.substr(pos, len).replace(/\\\\/g, \"\\\\\\\\\").replace(/\\x08/g, \"\\\\b\").replace(/\\t/g, \"\\\\t\").replace(/\\n/g, \"\\\\n\").replace(/\\f/g, \"\\\\f\").replace(/\\r/g, \"\\\\r\").replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function (ch) {\n            return \"\\\\x0\" + hex(ch);\n        }).replace(/[\\x10-\\x1F\\x80-\\xFF]/g, function (ch) {\n            return \"\\\\x\" + hex(ch);\n        }).replace(/[\\u0100-\\u0FFF]/g, function (ch) {\n            return \"\\\\u0\" + hex(ch);\n        }).replace(/[\\u1000-\\uFFFF]/g, function (ch) {\n            return \"\\\\u\" + hex(ch);\n        });\n    };\n    return {\n        prologTrunc: b > 0,\n        prologText: extract(txt, b, o - b),\n        tokenText: extract(txt, o, 1),\n        epilogText: extract(txt, o + 1, e - (o + 1)),\n        epilogTrunc: e < l\n    };\n};\n\nexports.default = excerpt;\n\n//# sourceURL=webpack:///./src/tokenizr-1-excerpt.js?");

/***/ }),

/***/ "./src/tokenizr-2-token.js":
/*!*********************************!*\
  !*** ./src/tokenizr-2-token.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\r\n**  Tokenizr -- String Tokenization Library\r\n**  Copyright (c) 2015-2018 Ralf S. Engelschall <rse@engelschall.com>\r\n**\r\n**  Permission is hereby granted, free of charge, to any person obtaining\r\n**  a copy of this software and associated documentation files (the\r\n**  \"Software\"), to deal in the Software without restriction, including\r\n**  without limitation the rights to use, copy, modify, merge, publish,\r\n**  distribute, sublicense, and/or sell copies of the Software, and to\r\n**  permit persons to whom the Software is furnished to do so, subject to\r\n**  the following conditions:\r\n**\r\n**  The above copyright notice and this permission notice shall be included\r\n**  in all copies or substantial portions of the Software.\r\n**\r\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\n\n/*  internal helper class for token representation  */\nvar Token = function () {\n    function Token(type, value, text) {\n        var pos = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n        var line = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n        var column = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n        _classCallCheck(this, Token);\n\n        this.type = type;\n        this.value = value;\n        this.text = text;\n        this.pos = pos;\n        this.line = line;\n        this.column = column;\n    }\n\n    _createClass(Token, [{\n        key: \"toString\",\n        value: function toString() {\n            return \"<type: \" + this.type + \", \" + (\"value: \" + JSON.stringify(this.value) + \", \") + (\"text: \" + JSON.stringify(this.text) + \", \") + (\"pos: \" + this.pos + \", \") + (\"line: \" + this.line + \", \") + (\"column: \" + this.column + \">\");\n        }\n    }, {\n        key: \"isA\",\n        value: function isA(type, value) {\n            if (type !== this.type) return false;\n            if (arguments.length === 2 && value !== this.value) return false;\n            return true;\n        }\n    }]);\n\n    return Token;\n}();\n\nexports.default = Token;\n\n//# sourceURL=webpack:///./src/tokenizr-2-token.js?");

/***/ }),

/***/ "./src/tokenizr-3-error.js":
/*!*********************************!*\
  !*** ./src/tokenizr-3-error.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _tokenizr1Excerpt = __webpack_require__(/*! ./tokenizr-1-excerpt */ \"./src/tokenizr-1-excerpt.js\");\n\nvar _tokenizr1Excerpt2 = _interopRequireDefault(_tokenizr1Excerpt);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\r\nokenizr -- String Tokenization Library\r\nopyright (c) 2015-2018 Ralf S. Engelschall <rse@engelschall.com>\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               **\r\nermission is hereby granted, free of charge, to any person obtaining\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               **  a copy of this software and associated documentation files (the\r\noftware\"), to deal in the Software without restriction, including\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               **  without limitation the rights to use, copy, modify, merge, publish,\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               **  distribute, sublicense, and/or sell copies of the Software, and to\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               **  permit persons to whom the Software is furnished to do so, subject to\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               **  the following conditions:\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               **\r\nhe above copyright notice and this permission notice shall be included\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               **  in all copies or substantial portions of the Software.\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               **\r\nr\nr\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               **  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nr\nr\nr\nr\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               */\n\n/*  internal helper class for tokenization error reporting  */\nvar ParsingError = function (_Error) {\n    _inherits(ParsingError, _Error);\n\n    /*  construct and initialize object  */\n    function ParsingError(message, pos, line, column, input) {\n        _classCallCheck(this, ParsingError);\n\n        var _this = _possibleConstructorReturn(this, (ParsingError.__proto__ || Object.getPrototypeOf(ParsingError)).call(this, message));\n\n        _this.name = \"ParsingError\";\n        _this.message = message;\n        _this.pos = pos;\n        _this.line = line;\n        _this.column = column;\n        _this.input = input;\n        return _this;\n    }\n\n    /*  render a useful string representation  */\n\n\n    _createClass(ParsingError, [{\n        key: \"toString\",\n        value: function toString() {\n            var l = (0, _tokenizr1Excerpt2.default)(this.input, this.pos);\n            var prefix1 = \"line \" + this.line + \" (column \" + this.column + \"): \";\n            var prefix2 = \"\";\n            for (var i = 0; i < prefix1.length + l.prologText.length; i++) {\n                prefix2 += \" \";\n            }var msg = \"Parsing Error: \" + this.message + \"\\n\" + prefix1 + l.prologText + l.tokenText + l.epilogText + \"\\n\" + prefix2 + \"^\";\n            return msg;\n        }\n    }]);\n\n    return ParsingError;\n}(Error);\n\nexports.default = ParsingError;\n\n//# sourceURL=webpack:///./src/tokenizr-3-error.js?");

/***/ }),

/***/ "./src/tokenizr-4-context.js":
/*!***********************************!*\
  !*** ./src/tokenizr-4-context.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\r\nokenizr -- String Tokenization Library\r\nopyright (c) 2015-2018 Ralf S. Engelschall <rse@engelschall.com>\r\nr\nermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\noftware\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     **  the following conditions:\r\nr\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     **  The above copyright notice and this permission notice shall be included\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     **  in all copies or substantial portions of the Software.\r\nr\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     **  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nr\nr\nr\nr\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     **  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nr\nn\nvar _tokenizr2Token = __webpack_require__(/*! ./tokenizr-2-token */ \"./src/tokenizr-2-token.js\");\n\nvar _tokenizr2Token2 = _interopRequireDefault(_tokenizr2Token);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*  internal helper class for action context  */\nvar ActionContext = function () {\n    /*  construct and initialize the object  */\n    function ActionContext(tokenizr) {\n        _classCallCheck(this, ActionContext);\n\n        this._tokenizr = tokenizr;\n        this._data = {};\n        this._repeat = false;\n        this._reject = false;\n        this._ignore = false;\n        this._match = null;\n    }\n\n    /*  store and retrieve user data attached to context  */\n\n\n    _createClass(ActionContext, [{\n        key: \"data\",\n        value: function data(key, value) {\n            var valueOld = this._data[key];\n            if (arguments.length === 2) this._data[key] = value;\n            return valueOld;\n        }\n\n        /*  retrieve information of current matching  */\n\n    }, {\n        key: \"info\",\n        value: function info() {\n            return {\n                line: this._tokenizr._line,\n                column: this._tokenizr._column,\n                pos: this._tokenizr._pos,\n                len: this._match[0].length\n            };\n        }\n\n        /*  pass-through functions to attached tokenizer  */\n\n    }, {\n        key: \"push\",\n        value: function push() {\n            this._tokenizr.push.apply(this._tokenizr, arguments);\n            return this;\n        }\n    }, {\n        key: \"pop\",\n        value: function pop() {\n            return this._tokenizr.pop.apply(this._tokenizr, arguments);\n        }\n    }, {\n        key: \"state\",\n        value: function state() {\n            if (arguments.length > 0) {\n                this._tokenizr.state.apply(this._tokenizr, arguments);\n                return this;\n            } else return this._tokenizr.state.apply(this._tokenizr, arguments);\n        }\n    }, {\n        key: \"tag\",\n        value: function tag() {\n            this._tokenizr.tag.apply(this._tokenizr, arguments);\n            return this;\n        }\n    }, {\n        key: \"tagged\",\n        value: function tagged() {\n            return this._tokenizr.tagged.apply(this._tokenizr, arguments);\n        }\n    }, {\n        key: \"untag\",\n        value: function untag() {\n            this._tokenizr.untag.apply(this._tokenizr, arguments);\n            return this;\n        }\n\n        /*  mark current matching to be repeated from scratch  */\n\n    }, {\n        key: \"repeat\",\n        value: function repeat() {\n            this._tokenizr._log(\"    REPEAT\");\n            this._repeat = true;\n            return this;\n        }\n\n        /*  mark current matching to be rejected  */\n\n    }, {\n        key: \"reject\",\n        value: function reject() {\n            this._tokenizr._log(\"    REJECT\");\n            this._reject = true;\n            return this;\n        }\n\n        /*  mark current matching to be ignored  */\n\n    }, {\n        key: \"ignore\",\n        value: function ignore() {\n            this._tokenizr._log(\"    IGNORE\");\n            this._ignore = true;\n            return this;\n        }\n\n        /*  accept current matching as a new token  */\n\n    }, {\n        key: \"accept\",\n        value: function accept(type, value) {\n            if (arguments.length < 2) value = this._match[0];\n            this._tokenizr._log(\"    ACCEPT: type: \" + type + \", value: \" + JSON.stringify(value) + \" (\" + (typeof value === \"undefined\" ? \"undefined\" : _typeof(value)) + \"), text: \\\"\" + this._match[0] + \"\\\"\");\n            this._tokenizr._pending.push(new _tokenizr2Token2.default(type, value, this._match[0], this._tokenizr._pos, this._tokenizr._line, this._tokenizr._column));\n            return this;\n        }\n\n        /*  immediately stop tokenization  */\n\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            this._tokenizr._stopped = true;\n            return this;\n        }\n    }]);\n\n    return ActionContext;\n}();\n\nexports.default = ActionContext;\n\n//# sourceURL=webpack:///./src/tokenizr-4-context.js?");

/***/ }),

/***/ "./src/tokenizr-5-tokenizer.js":
/*!*************************************!*\
  !*** ./src/tokenizr-5-tokenizer.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BasicTokenizr = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\r\nokenizr -- String Tokenization Library\r\nopyright (c) 2015-2018 Ralf S. Engelschall <rse@engelschall.com>\r\nr\nermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\noftware\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     **  distribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\nr\nhe above copyright notice and this permission notice shall be included\r\nin all copies or substantial portions of the Software.\r\nr\nr\nr\nr\nr\nr\nr\nr\nn\nvar _tokenizr1Excerpt = __webpack_require__(/*! ./tokenizr-1-excerpt */ \"./src/tokenizr-1-excerpt.js\");\n\nvar _tokenizr1Excerpt2 = _interopRequireDefault(_tokenizr1Excerpt);\n\nvar _tokenizr2Token = __webpack_require__(/*! ./tokenizr-2-token */ \"./src/tokenizr-2-token.js\");\n\nvar _tokenizr2Token2 = _interopRequireDefault(_tokenizr2Token);\n\nvar _tokenizr3Error = __webpack_require__(/*! ./tokenizr-3-error */ \"./src/tokenizr-3-error.js\");\n\nvar _tokenizr3Error2 = _interopRequireDefault(_tokenizr3Error);\n\nvar _tokenizr4Context = __webpack_require__(/*! ./tokenizr-4-context */ \"./src/tokenizr-4-context.js\");\n\nvar _tokenizr4Context2 = _interopRequireDefault(_tokenizr4Context);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar BasicTokenizr = function () {\n  function BasicTokenizr() {\n    _classCallCheck(this, BasicTokenizr);\n\n    this._before = null;\n    this._after = null;\n    this._finish = null;\n    this._rules = [];\n    this._debug = false;\n    this.reset();\n  }\n\n  /*  configure a tokenization rule  */\n\n\n  _createClass(BasicTokenizr, [{\n    key: \"rule\",\n    value: function rule(state, pattern, action) {\n      var name = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"unknown\";\n\n      /*  support optional states  */\n      if (arguments.length === 2 && typeof pattern === \"function\") {\n        var _ref = [state, pattern];\n        pattern = _ref[0];\n        action = _ref[1];\n\n        state = \"*\";\n      } else if (arguments.length === 3 && typeof pattern === \"function\") {\n        var _ref2 = [state, pattern, action];\n        pattern = _ref2[0];\n        action = _ref2[1];\n        name = _ref2[2];\n\n        state = \"*\";\n      }\n\n      /*  sanity check arguments  */\n      if (typeof state !== \"string\") throw new Error('parameter \"state\" not a String');\n      if (!((typeof pattern === \"undefined\" ? \"undefined\" : _typeof(pattern)) === \"object\" && pattern instanceof RegExp)) throw new Error('parameter \"pattern\" not a RegExp');\n      if (typeof action !== \"function\") throw new Error('parameter \"action\" not a Function');\n      if (typeof name !== \"string\") throw new Error('parameter \"name\" not a String');\n\n      /*  post-process state  */\n      state = state.split(/\\s*,\\s*/g).map(function (entry) {\n        var items = entry.split(/\\s+/g);\n        var states = items.filter(function (item) {\n          return item.match(/^#/) === null;\n        });\n        var tags = items.filter(function (item) {\n          return item.match(/^#/) !== null;\n        }).map(function (tag) {\n          return tag.replace(/^#/, \"\");\n        });\n        if (states.length !== 1) throw new Error(\"exactly one state required\");\n        return { state: states[0], tags: tags };\n      });\n\n      /*  post-process pattern  */\n      var flags = \"g\";\n      if (pattern.multiline) flags += \"m\";\n      if (pattern.ignoreCase) flags += \"i\";\n      pattern = new RegExp(pattern.source, flags);\n\n      /*  store rule  */\n      this._log(\"rule: configure rule (state: \" + state + \", pattern: \" + pattern.source + \")\");\n      this._rules.push({ state: state, pattern: pattern, action: action, name: name });\n\n      return this;\n    }\n\n    /*  output a debug message  */\n\n  }, {\n    key: \"_log\",\n    value: function _log(msg) {\n      if (this._debug) console.log(\"tokenizr: \" + msg);\n    }\n  }, {\n    key: \"input\",\n    value: function input(_input) {\n      /*  sanity check arguments  */\n      if (typeof _input !== \"string\") throw new Error('parameter \"input\" not a String');\n\n      /*  reset state and store new input  */\n      this.reset();\n      this._input = _input;\n      this._len = _input.length;\n      return this;\n    }\n\n    /*  reset the internal state  */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._input = \"\";\n      this._len = 0;\n      this._eof = false;\n      this._pos = 0;\n      this._line = 1;\n      this._column = 1;\n      this._state = [\"default\"];\n      this._tag = {};\n      this._transaction = [];\n      this._pending = [];\n      this._stopped = false;\n      this._ctx = new _tokenizr4Context2.default(this);\n      return this;\n    }\n\n    /*  determine and return all tokens  */\n\n  }, {\n    key: \"tokens\",\n    value: function tokens() {\n      var result = [];\n      var token = void 0;\n      while ((token = this.token()) !== null) {\n        result.push(token);\n      }return result;\n    }\n\n    /*  determine and return next token  */\n\n  }, {\n    key: \"token\",\n    value: function token() {\n      /*  if no more tokens are pending, try to determine a new one  */\n      if (this._pending.length === 0) this._tokenize();\n\n      /*  return now potentially pending token  */\n      if (this._pending.length > 0) {\n        var token = this._pending.shift();\n        if (this._transaction.length > 0) this._transaction[0].push(token);\n        this._log(\"TOKEN: \" + token.toString());\n        return token;\n      }\n\n      /*  no more tokens  */\n      return null;\n    }\n\n    /*  determine and return the next token  */\n\n  }, {\n    key: \"_tokenize\",\n    value: function _tokenize() {\n      var _this = this;\n\n      /*  helper function for finishing parsing  */\n      var finish = function finish() {\n        if (!_this._eof) {\n          if (_this._finish !== null) _this._finish.call(_this._ctx, _this._ctx);\n          _this._eof = true;\n          _this._pending.push(new _tokenizr2Token2.default(\"EOF\", \"\", \"\", _this._pos, _this._line, _this._column));\n        }\n      };\n\n      /*  tokenize only as long as we were not stopped and there is input left  */\n      if (this._stopped || this._pos >= this._len) {\n        finish();\n        return;\n      }\n\n      /*  loop...  */\n      var continued = true;\n      while (continued) {\n        continued = false;\n\n        /*  some optional debugging context  */\n        if (this._debug) {\n          var e = (0, _tokenizr1Excerpt2.default)(this._input, this._pos);\n          var tags = Object.keys(this._tag).map(function (tag) {\n            return \"#\" + tag;\n          }).join(\" \");\n          this._log(\"INPUT: state: <\" + this._state[this._state.length - 1] + \">, tags: <\" + tags + \">, text: \" + (e.prologTrunc ? \"...\" : '\"') + (e.prologText + \"<\" + e.tokenText + \">\" + e.epilogText) + (e.epilogTrunc ? \"...\" : '\"') + (\", at: <line \" + this._line + \", column \" + this._column + \">\"));\n        }\n\n        /*  iterate over all rules...  */\n        for (var i = 0; i < this._rules.length; i++) {\n          if (this._debug) {\n            var state = this._rules[i].state.map(function (item) {\n              var output = item.state;\n              if (item.tags.length > 0) output += \" \" + item.tags.map(function (tag) {\n                return \"#\" + tag;\n              }).join(\" \");\n              return output;\n            }).join(\", \");\n            this._log(\"  RULE: state(s): <\" + state + \">, \" + (\"pattern: \" + this._rules[i].pattern.source));\n          }\n\n          /*  one of rule's states (and all of its tags) has to match  */\n          var matches = false;\n          var states = this._rules[i].state.map(function (item) {\n            return item.state;\n          });\n          var idx = states.indexOf(\"*\");\n          if (idx < 0) idx = states.indexOf(this._state[this._state.length - 1]);\n          if (idx >= 0) {\n            matches = true;\n            var _tags = this._rules[i].state[idx].tags;\n            _tags = _tags.filter(function (tag) {\n              return !_this._tag[tag];\n            });\n            if (_tags.length > 0) matches = false;\n          }\n          if (!matches) continue;\n\n          /*  match pattern at the last position  */\n          this._rules[i].pattern.lastIndex = this._pos;\n          var found = this._rules[i].pattern.exec(this._input);\n          this._rules[i].pattern.lastIndex = this._pos;\n          if ((found = this._rules[i].pattern.exec(this._input)) !== null && found.index === this._pos) {\n            if (this._debug) this._log(\"    MATCHED: \" + JSON.stringify(found));\n\n            /*  pattern found, so give action a chance to operate\r\n                              on it and act according to its results  */\n            this._ctx._match = found;\n            this._ctx._repeat = false;\n            this._ctx._reject = false;\n            this._ctx._ignore = false;\n            if (this._before !== null) this._before.call(this._ctx, this._ctx, found, this._rules[i]);\n            this._rules[i].action.call(this._ctx, this._ctx, found);\n            if (this._after !== null) this._after.call(this._ctx, this._ctx, found, this._rules[i]);\n            if (this._ctx._reject)\n              /*  reject current action, continue matching  */\n              continue;else if (this._ctx._repeat) {\n              /*  repeat matching from scratch  */\n              continued = true;\n              break;\n            } else if (this._ctx._ignore) {\n              /*  ignore token  */\n              this._progress(this._pos, this._rules[i].pattern.lastIndex);\n              this._pos = this._rules[i].pattern.lastIndex;\n              if (this._pos >= this._len) {\n                finish();\n                return;\n              }\n              continued = true;\n              break;\n            } else if (this._pending.length > 0) {\n              /*  accept token(s)  */\n              this._progress(this._pos, this._rules[i].pattern.lastIndex);\n              this._pos = this._rules[i].pattern.lastIndex;\n              if (this._pos >= this._len) finish();\n              return;\n            } else throw new Error('action of pattern \"' + this._rules[i].pattern.source + '\" neither rejected nor accepted any token(s)');\n          }\n        }\n      }\n\n      /*  no pattern matched at all  */\n      throw this.error(\"token not recognized\");\n    }\n\n    /*  progress the line/column counter  */\n\n  }, {\n    key: \"_progress\",\n    value: function _progress(from, until) {\n      var line = this._line;\n      var column = this._column;\n      var s = this._input;\n      for (var i = from; i < until; i++) {\n        var c = s.charAt(i);\n        if (c === \"\\r\") this._column = 1;else if (c === \"\\n\") {\n          this._line++;\n          this._column = 1;\n        } else if (c === \"\\t\") this._column += 8 - this._column % 8;else this._column++;\n      }\n      this._log(\"    PROGRESS: characters: \" + (until - from) + \", \" + (\"from: <line \" + line + \", column \" + column + \">, \") + (\"to: <line \" + this._line + \", column \" + this._column + \">\"));\n    }\n\n    /*  create an error message for the current position  */\n\n  }, {\n    key: \"error\",\n    value: function error(message) {\n      return new _tokenizr3Error2.default(message, this._pos, this._line, this._column, this._input);\n    }\n  }]);\n\n  return BasicTokenizr;\n}();\n\n/*  external API class  */\n\n\nexports.BasicTokenizr = BasicTokenizr;\nvar Tokenizr = function (_BasicTokenizr) {\n  _inherits(Tokenizr, _BasicTokenizr);\n\n  /*  construct and initialize the object  */\n  function Tokenizr() {\n    _classCallCheck(this, Tokenizr);\n\n    return _possibleConstructorReturn(this, (Tokenizr.__proto__ || Object.getPrototypeOf(Tokenizr)).call(this));\n  }\n\n  /*  configure debug operation  */\n\n\n  _createClass(Tokenizr, [{\n    key: \"debug\",\n    value: function debug(_debug) {\n      this._debug = _debug;\n      return this;\n    }\n\n    /*  provide (new) input string to tokenize  */\n\n    /*  push state  */\n\n  }, {\n    key: \"push\",\n    value: function push(state) {\n      /*  sanity check arguments  */\n      if (arguments.length !== 1) throw new Error(\"invalid number of arguments\");\n      if (typeof state !== \"string\") throw new Error('parameter \"state\" not a String');\n\n      /*  push new state  */\n      this._log(\"    STATE (PUSH): \" + (\"old: <\" + this._state[this._state.length - 1] + \">, \") + (\"new: <\" + state + \">\"));\n      this._state.push(state);\n      return this;\n    }\n\n    /*  pop state  */\n\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      /*  sanity check arguments  */\n      if (arguments.length !== 0) throw new Error(\"invalid number of arguments\");\n      if (this._state.length < 2) throw new Error(\"no more custom states to pop\");\n\n      /*  pop old state  */\n      this._log(\"    STATE (POP): \" + (\"old: <\" + this._state[this._state.length - 1] + \">, \") + (\"new: <\" + this._state[this._state.length - 2] + \">\"));\n      return this._state.pop();\n    }\n\n    /*  get/set state  */\n\n  }, {\n    key: \"state\",\n    value: function state(_state) {\n      if (arguments.length === 1) {\n        /*  sanity check arguments  */\n        if (typeof _state !== \"string\") throw new Error('parameter \"state\" not a String');\n\n        /*  change current state  */\n        this._log(\"    STATE (SET): \" + (\"old: <\" + this._state[this._state.length - 1] + \">, \") + (\"new: <\" + _state + \">\"));\n        this._state[this._state.length - 1] = _state;\n        return this;\n      } else if (arguments.length === 0) return this._state[this._state.length - 1];else throw new Error(\"invalid number of arguments\");\n    }\n\n    /*  set a tag  */\n\n  }, {\n    key: \"tag\",\n    value: function tag(_tag) {\n      /*  sanity check arguments  */\n      if (arguments.length !== 1) throw new Error(\"invalid number of arguments\");\n      if (typeof _tag !== \"string\") throw new Error('parameter \"tag\" not a String');\n\n      /*  set tag  */\n      this._log(\"    TAG (ADD): \" + _tag);\n      this._tag[_tag] = true;\n      return this;\n    }\n\n    /*  check whether tag is set  */\n\n  }, {\n    key: \"tagged\",\n    value: function tagged(tag) {\n      /*  sanity check arguments  */\n      if (arguments.length !== 1) throw new Error(\"invalid number of arguments\");\n      if (typeof tag !== \"string\") throw new Error('parameter \"tag\" not a String');\n\n      /*  set tag  */\n      return this._tag[tag] === true;\n    }\n\n    /*  unset a tag  */\n\n  }, {\n    key: \"untag\",\n    value: function untag(tag) {\n      /*  sanity check arguments  */\n      if (arguments.length !== 1) throw new Error(\"invalid number of arguments\");\n      if (typeof tag !== \"string\") throw new Error('parameter \"tag\" not a String');\n\n      /*  delete tag  */\n      this._log(\"    TAG (DEL): \" + tag);\n      delete this._tag[tag];\n      return this;\n    }\n\n    /*  configure a tokenization before-rule callback  */\n\n  }, {\n    key: \"before\",\n    value: function before(action) {\n      this._before = action;\n      return this;\n    }\n\n    /*  configure a tokenization after-rule callback  */\n\n  }, {\n    key: \"after\",\n    value: function after(action) {\n      this._after = action;\n      return this;\n    }\n\n    /*  configure a tokenization finish callback  */\n\n  }, {\n    key: \"finish\",\n    value: function finish(action) {\n      this._finish = action;\n      return this;\n    }\n\n    /*  peek at the next token or token at particular offset  */\n\n  }, {\n    key: \"peek\",\n    value: function peek(offset) {\n      if (typeof offset === \"undefined\") offset = 0;\n      for (var i = 0; i < this._pending.length + offset; i++) {\n        this._tokenize();\n      }if (offset >= this._pending.length) throw new Error(\"not enough tokens available for peek operation\");\n      this._log(\"PEEK: \" + this._pending[offset].toString());\n      return this._pending[offset];\n    }\n\n    /*  skip one or more tokens  */\n\n  }, {\n    key: \"skip\",\n    value: function skip(len) {\n      if (typeof len === \"undefined\") len = 1;\n      for (var i = 0; i < this._pending.length + len; i++) {\n        this._tokenize();\n      }if (len > this._pending.length) throw new Error(\"not enough tokens available for skip operation\");\n      while (len-- > 0) {\n        this.token();\n      }return this;\n    }\n\n    /*  consume the current token (by expecting it to be a particular symbol)  */\n\n  }, {\n    key: \"consume\",\n    value: function consume(type, value) {\n      for (var i = 0; i < this._pending.length + 1; i++) {\n        this._tokenize();\n      }if (this._pending.length === 0) throw new Error(\"not enough tokens available for consume operation\");\n      var token = this.token();\n      this._log(\"CONSUME: \" + token.toString());\n      if (arguments.length === 2) {\n        if (!token.isA(type, value)) throw new _tokenizr3Error2.default(\"expected: <type: \" + type + \", value: \" + JSON.stringify(value) + \" (\" + (typeof value === \"undefined\" ? \"undefined\" : _typeof(value)) + \")>, \" + (\"found: <type: \" + token.type + \", value: \" + JSON.stringify(token.value) + \" (\" + _typeof(token.value) + \")>\"), token.pos, token.line, token.column, this._input);\n      } else {\n        if (!token.isA(type)) throw new _tokenizr3Error2.default(\"expected: <type: \" + type + \", value: * (any)>, \" + (\"found: <type: \" + token.type + \", value: \" + JSON.stringify(token.value) + \" (\" + _typeof(token.value) + \")>\"), token.pos, token.line, token.column, this._input);\n      }\n      return token;\n    }\n\n    /*  open tokenization transaction  */\n\n  }, {\n    key: \"begin\",\n    value: function begin() {\n      this._log(\"BEGIN: level \" + this._transaction.length);\n      this._transaction.unshift([]);\n      return this;\n    }\n\n    /*  determine depth of still open tokenization transaction  */\n\n  }, {\n    key: \"depth\",\n    value: function depth() {\n      if (this._transaction.length === 0) throw new Error(\"cannot determine depth -- no active transaction\");\n      return this._transaction[0].length;\n    }\n\n    /*  close (successfully) tokenization transaction  */\n\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      if (this._transaction.length === 0) throw new Error(\"cannot commit transaction -- no active transaction\");\n      this._transaction.shift();\n      this._log(\"COMMIT: level \" + this._transaction.length);\n      return this;\n    }\n\n    /*  close (unsuccessfully) tokenization transaction  */\n\n  }, {\n    key: \"rollback\",\n    value: function rollback() {\n      if (this._transaction.length === 0) throw new Error(\"cannot rollback transaction -- no active transaction\");\n      this._pending = this._transaction[0].concat(this._pending);\n      this._transaction.shift();\n      this._log(\"ROLLBACK: level \" + this._transaction.length);\n      return this;\n    }\n\n    /*  execute multiple alternative callbacks  */\n\n  }, {\n    key: \"alternatives\",\n    value: function alternatives() {\n      var result = null;\n      var depths = [];\n\n      for (var _len = arguments.length, _alternatives = Array(_len), _key = 0; _key < _len; _key++) {\n        _alternatives[_key] = arguments[_key];\n      }\n\n      for (var i = 0; i < _alternatives.length; i++) {\n        try {\n          this.begin();\n          result = _alternatives[i].call(this);\n          this.commit();\n          break;\n        } catch (ex) {\n          this._log(\"EXCEPTION: \" + ex.toString());\n          depths.push({ ex: ex, depth: this.depth() });\n          this.rollback();\n          continue;\n        }\n      }\n      if (result === null && depths.length > 0) {\n        depths = depths.sort(function (a, b) {\n          return a.depth - b.depth;\n        });\n        throw depths[0].ex;\n      }\n      return result;\n    }\n  }]);\n\n  return Tokenizr;\n}(BasicTokenizr);\n\n/*  expose the utility classes, too  */\nTokenizr.Token = _tokenizr2Token2.default;\nTokenizr.ParsingError = _tokenizr3Error2.default;\nTokenizr.ActionContext = _tokenizr4Context2.default;\n\n/*  export the API class  */\nexports.default = Tokenizr;\n\n//# sourceURL=webpack:///./src/tokenizr-5-tokenizer.js?");

/***/ }),

/***/ "./src/tokenizr.js":
/*!*************************!*\
  !*** ./src/tokenizr.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BasicTokenizr = undefined;\n\nvar _tokenizr5Tokenizer = __webpack_require__(/*! ./tokenizr-5-tokenizer */ \"./src/tokenizr-5-tokenizer.js\");\n\nvar _tokenizr5Tokenizer2 = _interopRequireDefault(_tokenizr5Tokenizer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _tokenizr5Tokenizer2.default; /*\r\n                                                **  Tokenizr -- String Tokenization Library\r\n                                                **  Copyright (c) 2015-2018 Ralf S. Engelschall <rse@engelschall.com>\r\n                                                **\r\n                                                **  Permission is hereby granted, free of charge, to any person obtaining\r\n                                                **  a copy of this software and associated documentation files (the\r\n                                                **  \"Software\"), to deal in the Software without restriction, including\r\n                                                **  without limitation the rights to use, copy, modify, merge, publish,\r\n                                                **  distribute, sublicense, and/or sell copies of the Software, and to\r\n                                                **  permit persons to whom the Software is furnished to do so, subject to\r\n                                                **  the following conditions:\r\n                                                **\r\n                                                **  The above copyright notice and this permission notice shall be included\r\n                                                **  in all copies or substantial portions of the Software.\r\n                                                **\r\n                                                **  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n                                                **  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n                                                **  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n                                                **  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n                                                **  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n                                                **  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n                                                **  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n                                                */\n\nexports.BasicTokenizr = _tokenizr5Tokenizer.BasicTokenizr;\n\n//# sourceURL=webpack:///./src/tokenizr.js?");

/***/ })

/******/ });