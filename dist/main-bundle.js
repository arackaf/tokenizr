!function(t){var e={};function i(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},i.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=3)}([function(t,e,i){"use strict";var n=(t,e)=>{var i=t.length,n=e-20;n<0&&(n=0);var r=e+20;r>i&&(r=i);var s=function(t){return t.charCodeAt(0).toString(16).toUpperCase()},o=function(t,e,i){return t.substr(e,i).replace(/\\/g,"\\\\").replace(/\x08/g,"\\b").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\f/g,"\\f").replace(/\r/g,"\\r").replace(/[\x00-\x07\x0B\x0E\x0F]/g,function(t){return"\\x0"+s(t)}).replace(/[\x10-\x1F\x80-\xFF]/g,function(t){return"\\x"+s(t)}).replace(/[\u0100-\u0FFF]/g,function(t){return"\\u0"+s(t)}).replace(/[\u1000-\uFFFF]/g,function(t){return"\\u"+s(t)})};return{prologTrunc:n>0,prologText:o(t,n,e-n),tokenText:o(t,e,1),epilogText:o(t,e+1,r-(e+1)),epilogTrunc:r<i}};class r{constructor(t,e,i,n=0,r=0,s=0){this.type=t,this.value=e,this.text=i,this.pos=n,this.line=r,this.column=s}toString(){return`<type: ${this.type}, `+`value: ${JSON.stringify(this.value)}, `+`text: ${JSON.stringify(this.text)}, `+`pos: ${this.pos}, `+`line: ${this.line}, `+`column: ${this.column}>`}isA(t,e){return t===this.type&&(2!==arguments.length||e===this.value)}}class s extends Error{constructor(t,e,i,n,r){super(t),this.name="ParsingError",this.message=t,this.pos=e,this.line=i,this.column=n,this.input=r}toString(){let t=n(this.input,this.pos),e=`line ${this.line} (column ${this.column}): `,i="";for(let n=0;n<e.length+t.prologText.length;n++)i+=" ";return"Parsing Error: "+this.message+"\n"+e+t.prologText+t.tokenText+t.epilogText+"\n"+i+"^"}}class o{constructor(t){this._tokenizr=t,this._data={},this._repeat=!1,this._reject=!1,this._ignore=!1,this._match=null}data(t,e){let i=this._data[t];return 2===arguments.length&&(this._data[t]=e),i}info(){return{line:this._tokenizr._line,column:this._tokenizr._column,pos:this._tokenizr._pos,len:this._match[0].length}}push(){return this._tokenizr.push.apply(this._tokenizr,arguments),this}pop(){return this._tokenizr.pop.apply(this._tokenizr,arguments)}state(){return arguments.length>0?(this._tokenizr.state.apply(this._tokenizr,arguments),this):this._tokenizr.state.apply(this._tokenizr,arguments)}tag(){return this._tokenizr.tag.apply(this._tokenizr,arguments),this}tagged(){return this._tokenizr.tagged.apply(this._tokenizr,arguments)}untag(){return this._tokenizr.untag.apply(this._tokenizr,arguments),this}repeat(){return this._tokenizr._log("    REPEAT"),this._repeat=!0,this}reject(){return this._tokenizr._log("    REJECT"),this._reject=!0,this}ignore(){return this._tokenizr._log("    IGNORE"),this._ignore=!0,this}accept(t,e){return arguments.length<2&&(e=this._match[0]),this._tokenizr._log(`    ACCEPT: type: ${t}, value: ${JSON.stringify(e)} (${typeof e}), text: "${this._match[0]}"`),this._tokenizr._pending.push(new r(t,e,this._match[0],this._tokenizr._pos,this._tokenizr._line,this._tokenizr._column)),this}stop(){return this._tokenizr._stopped=!0,this}}let h=class{constructor(){this._before=null,this._after=null,this._finish=null,this._rules=[],this._debug=!1,this.reset()}reset(){return this._input="",this._len=0,this._eof=!1,this._pos=0,this._line=1,this._column=1,this._state=["default"],this._tag={},this._transaction=[],this._pending=[],this._stopped=!1,this._ctx=new o(this),this}debug(t){return this._debug=t,this}_log(t){this._debug&&console.log(`tokenizr: ${t}`)}input(t){if("string"!=typeof t)throw new Error('parameter "input" not a String');return this.reset(),this._input=t,this._len=t.length,this}push(t){if(1!==arguments.length)throw new Error("invalid number of arguments");if("string"!=typeof t)throw new Error('parameter "state" not a String');return this._log("    STATE (PUSH): "+`old: <${this._state[this._state.length-1]}>, `+`new: <${t}>`),this._state.push(t),this}pop(){if(0!==arguments.length)throw new Error("invalid number of arguments");if(this._state.length<2)throw new Error("no more custom states to pop");return this._log("    STATE (POP): "+`old: <${this._state[this._state.length-1]}>, `+`new: <${this._state[this._state.length-2]}>`),this._state.pop()}state(t){if(1===arguments.length){if("string"!=typeof t)throw new Error('parameter "state" not a String');return this._log("    STATE (SET): "+`old: <${this._state[this._state.length-1]}>, `+`new: <${t}>`),this._state[this._state.length-1]=t,this}if(0===arguments.length)return this._state[this._state.length-1];throw new Error("invalid number of arguments")}tag(t){if(1!==arguments.length)throw new Error("invalid number of arguments");if("string"!=typeof t)throw new Error('parameter "tag" not a String');return this._log(`    TAG (ADD): ${t}`),this._tag[t]=!0,this}tagged(t){if(1!==arguments.length)throw new Error("invalid number of arguments");if("string"!=typeof t)throw new Error('parameter "tag" not a String');return!0===this._tag[t]}untag(t){if(1!==arguments.length)throw new Error("invalid number of arguments");if("string"!=typeof t)throw new Error('parameter "tag" not a String');return this._log(`    TAG (DEL): ${t}`),delete this._tag[t],this}before(t){return this._before=t,this}after(t){return this._after=t,this}finish(t){return this._finish=t,this}rule(t,e,i,n="unknown"){if(2===arguments.length&&"function"==typeof e?([e,i]=[t,e],t="*"):3===arguments.length&&"function"==typeof e&&([e,i,n]=[t,e,i],t="*"),"string"!=typeof t)throw new Error('parameter "state" not a String');if(!("object"==typeof e&&e instanceof RegExp))throw new Error('parameter "pattern" not a RegExp');if("function"!=typeof i)throw new Error('parameter "action" not a Function');if("string"!=typeof n)throw new Error('parameter "name" not a String');t=t.split(/\s*,\s*/g).map(t=>{let e=t.split(/\s+/g),i=e.filter(t=>null===t.match(/^#/)),n=e.filter(t=>null!==t.match(/^#/)).map(t=>t.replace(/^#/,""));if(1!==i.length)throw new Error("exactly one state required");return{state:i[0],tags:n}});var r="g";return e.multiline&&(r+="m"),e.ignoreCase&&(r+="i"),e=new RegExp(e.source,r),this._log(`rule: configure rule (state: ${t}, pattern: ${e.source})`),this._rules.push({state:t,pattern:e,action:i,name:n}),this}_progress(t,e){let i=this._line,n=this._column,r=this._input;for(let i=t;i<e;i++){let t=r.charAt(i);"\r"===t?this._column=1:"\n"===t?(this._line++,this._column=1):"\t"===t?this._column+=8-this._column%8:this._column++}this._log(`    PROGRESS: characters: ${e-t}, `+`from: <line ${i}, column ${n}>, `+`to: <line ${this._line}, column ${this._column}>`)}_tokenize(){const t=()=>{this._eof||(null!==this._finish&&this._finish.call(this._ctx,this._ctx),this._eof=!0,this._pending.push(new r("EOF","","",this._pos,this._line,this._column)))};if(this._stopped||this._pos>=this._len)return void t();let e=!0;for(;e;){if(e=!1,this._debug){let t=n(this._input,this._pos),e=Object.keys(this._tag).map(t=>`#${t}`).join(" ");this._log(`INPUT: state: <${this._state[this._state.length-1]}>, tags: <${e}>, text: `+(t.prologTrunc?"...":'"')+`${t.prologText}<${t.tokenText}>${t.epilogText}`+(t.epilogTrunc?"...":'"')+`, at: <line ${this._line}, column ${this._column}>`)}for(let i=0;i<this._rules.length;i++){if(this._debug){let t=this._rules[i].state.map(t=>{let e=t.state;return t.tags.length>0&&(e+=" "+t.tags.map(t=>`#${t}`).join(" ")),e}).join(", ");this._log(`  RULE: state(s): <${t}>, `+`pattern: ${this._rules[i].pattern.source}`)}let n=!1,r=this._rules[i].state.map(t=>t.state),s=r.indexOf("*");if(s<0&&(s=r.indexOf(this._state[this._state.length-1])),s>=0){n=!0;let t=this._rules[i].state[s].tags;(t=t.filter(t=>!this._tag[t])).length>0&&(n=!1)}if(!n)continue;this._rules[i].pattern.lastIndex=this._pos;let o=this._rules[i].pattern.exec(this._input);if(this._rules[i].pattern.lastIndex=this._pos,null!==(o=this._rules[i].pattern.exec(this._input))&&o.index===this._pos){if(this._debug&&this._log("    MATCHED: "+JSON.stringify(o)),this._ctx._match=o,this._ctx._repeat=!1,this._ctx._reject=!1,this._ctx._ignore=!1,null!==this._before&&this._before.call(this._ctx,this._ctx,o,this._rules[i]),this._rules[i].action.call(this._ctx,this._ctx,o),null!==this._after&&this._after.call(this._ctx,this._ctx,o,this._rules[i]),this._ctx._reject)continue;if(this._ctx._repeat){e=!0;break}if(this._ctx._ignore){if(this._progress(this._pos,this._rules[i].pattern.lastIndex),this._pos=this._rules[i].pattern.lastIndex,this._pos>=this._len)return void t();e=!0;break}if(this._pending.length>0)return this._progress(this._pos,this._rules[i].pattern.lastIndex),this._pos=this._rules[i].pattern.lastIndex,void(this._pos>=this._len&&t());throw new Error('action of pattern "'+this._rules[i].pattern.source+'" neither rejected nor accepted any token(s)')}}}throw this.error("token not recognized")}token(){if(0===this._pending.length&&this._tokenize(),this._pending.length>0){let t=this._pending.shift();return this._transaction.length>0&&this._transaction[0].push(t),this._log(`TOKEN: ${t.toString()}`),t}return null}tokens(){let t,e=[];for(;null!==(t=this.token());)e.push(t);return e}peek(t){void 0===t&&(t=0);for(let e=0;e<this._pending.length+t;e++)this._tokenize();if(t>=this._pending.length)throw new Error("not enough tokens available for peek operation");return this._log(`PEEK: ${this._pending[t].toString()}`),this._pending[t]}skip(t){void 0===t&&(t=1);for(let e=0;e<this._pending.length+t;e++)this._tokenize();if(t>this._pending.length)throw new Error("not enough tokens available for skip operation");for(;t-- >0;)this.token();return this}consume(t,e){for(let t=0;t<this._pending.length+1;t++)this._tokenize();if(0===this._pending.length)throw new Error("not enough tokens available for consume operation");let i=this.token();if(this._log(`CONSUME: ${i.toString()}`),2===arguments.length){if(!i.isA(t,e))throw new s(`expected: <type: ${t}, value: ${JSON.stringify(e)} (${typeof e})>, `+`found: <type: ${i.type}, value: ${JSON.stringify(i.value)} (${typeof i.value})>`,i.pos,i.line,i.column,this._input)}else if(!i.isA(t))throw new s(`expected: <type: ${t}, value: * (any)>, `+`found: <type: ${i.type}, value: ${JSON.stringify(i.value)} (${typeof i.value})>`,i.pos,i.line,i.column,this._input);return i}begin(){return this._log(`BEGIN: level ${this._transaction.length}`),this._transaction.unshift([]),this}depth(){if(0===this._transaction.length)throw new Error("cannot determine depth -- no active transaction");return this._transaction[0].length}commit(){if(0===this._transaction.length)throw new Error("cannot commit transaction -- no active transaction");return this._transaction.shift(),this._log(`COMMIT: level ${this._transaction.length}`),this}rollback(){if(0===this._transaction.length)throw new Error("cannot rollback transaction -- no active transaction");return this._pending=this._transaction[0].concat(this._pending),this._transaction.shift(),this._log(`ROLLBACK: level ${this._transaction.length}`),this}alternatives(...t){let e=null,i=[];for(let n=0;n<t.length;n++)try{this.begin(),e=t[n].call(this),this.commit();break}catch(t){this._log(`EXCEPTION: ${t.toString()}`),i.push({ex:t,depth:this.depth()}),this.rollback();continue}if(null===e&&i.length>0)throw(i=i.sort((t,e)=>t.depth-e.depth))[0].ex;return e}error(t){return new s(t,this._pos,this._line,this._column,this._input)}};h.Token=r,h.ParsingError=s,h.ActionContext=o;e.a=h},function(t,e,i){"use strict";(function(t){var e=i(0);t.exports=e.a}).call(this,i(2)(t))},function(t,e){t.exports=function(t){if(!t.webpackPolyfill){var e=Object.create(t);e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),Object.defineProperty(e,"exports",{enumerable:!0}),e.webpackPolyfill=1}return e}},function(t,e,i){"use strict";i.r(e);var n=i(1);e.default=n.default}]);